<UserControl x:Class="TweetListener2.Views.OldMainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:extendedWpf="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TweetListener2.Views"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1366" Background="White"
             MaxWidth="1366">
    <Grid>
        <DockPanel>
            <!-- This could be a menu bar -->
            <!--<Menu DockPanel.Dock="Top" VerticalAlignment="Top">
            <Button Content="Reset Layout" Click="menuResetLayout"/>
        </Menu>-->

            <ad:DockingManager x:Name="dMan" Loaded="dMan_Loaded" Unloaded="dMan_Unloaded">
                <ad:LayoutRoot>
                    <ad:LayoutPanel Orientation="Horizontal">

                        <!-- PANELS GO HERE -->

                        <ad:LayoutPanel Orientation="Vertical">

                            <!-- LOG PANEL -->

                            <ad:LayoutAnchorablePane DockHeight="3*" DockWidth="*">
                                <ad:LayoutAnchorable Title="Log" CanClose="False" CanHide="False" AutoHideWidth="300">
                                    <DockPanel x:Name="logPane">
                                        <DockPanel DockPanel.Dock="Top">
                                            <Button Content="Clear Log" Width="100" Click="logClearButtonClick" HorizontalAlignment="Left">
                                                <Button.ToolTip>
                                                    Clears log messages from memory. Log file not affected.
                                                </Button.ToolTip>
                                            </Button>
                                            <!--<CheckBox Content="Auto Scroll" Width="100" IsChecked="{Binding ScrollToLast}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0">
                                                <CheckBox.ToolTip>
                                                    Scrolls down every time there is a new log message.
                                                </CheckBox.ToolTip>
                                            </CheckBox>-->
                                        </DockPanel>
                                        <DataGrid x:Name="logView" ItemsSource="{Binding Path=., Mode=OneWay}" AutoGenerateColumns="False">
                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn Header="Time">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Time}"  TextWrapping="Wrap"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="Message" Width="*">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ScrollViewer MaxHeight="300" >
                                                                <TextBlock Text="{Binding Message}"  TextWrapping="Wrap" />
                                                            </ScrollViewer>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DockPanel>
                                </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>
                            <!-- END LOG PANEL -->

                            <!-- TWEET PANEL -->

                            <ad:LayoutAnchorablePane DockHeight="3*" DockWidth="2*">
                                <ad:LayoutAnchorable Title="Tweets">
                                    <DockPanel>
                                        <DockPanel DockPanel.Dock="Top" Margin="0 0 0 10" >
                                            <Button Content="Reset Selection" Width="100" Click="tweetView_ResetSelection">
                                                <Button.ToolTip>
                                                    Reset keyword selection, show all tweets. 
                                                Not recomended for more than 20000 tweets, real slow update.
                                                </Button.ToolTip>
                                            </Button>
                                            <Button Content="Delete All" Width="60" Margin="10 0" Click="tweetView_DeleteAll" HorizontalAlignment="Left">
                                                <Button.ToolTip>
                                                    Delete all tweets from memory. Files and database unaffected.
                                                </Button.ToolTip>
                                            </Button>
                                            <Button Content="Load from text file" Margin="0 0" Click="tweetView_LoadFromFile" HorizontalAlignment="Left">
                                                <Button.ToolTip>
                                                    Loads all tweets saved in file with path specified in Log Settings > Text file DB path.
                                                Can be slow but progress is shown here. Process can be interrupted when clicked again.
                                                </Button.ToolTip>
                                            </Button>
                                            <Button Content="Resend to database" Margin="10 0" Click="tweetView_resendToDatabase" HorizontalAlignment="Left">
                                                <Button.ToolTip>
                                                    Sends the saved tweets to the database again. Useful when loading tweets from a backup file and posting them back to the DB
                                                </Button.ToolTip>
                                            </Button>
                                            <Label x:Name="fromFileLoaderLabel" Content="{Binding Path=FromFileLoader, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Label x:Name="tweetsPerSecondLabel" Content="{Binding Path=TweetsPerSecondString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <CheckBox x:Name="tweetViewOnlyEnglish" Content="Only English" IsChecked="{Binding OnlyEnglish, Mode=TwoWay}" VerticalAlignment="Center" Margin="0 0 10 0">
                                                <CheckBox.ToolTip>
                                                    Only save tweets in English, or undefined (since they can often be in english).
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="tweetViewOnlyWithHashtags" Content="Only with Hashtags" IsChecked="{Binding OnlyWithHashtags, Mode=TwoWay}" VerticalAlignment="Center" Margin="0 0 10 0">
                                                <CheckBox.ToolTip>
                                                    Only save tweets containing at least one hashtag.
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="tweetViewContinuousUpdate" Content="Continuous update" IsChecked="{Binding ContinuousTweetViewUpdate, Mode=TwoWay}" VerticalAlignment="Center" Margin="0 0 10 0">
                                                <CheckBox.ToolTip>
                                                    Update tweetView every second with the list of tweets. Slows down the process but displays tweets. 
                                                Not recommended with more than 10000 tweets because it can get REALLY slow.
                                                </CheckBox.ToolTip>
                                            </CheckBox>

                                        </DockPanel>
                                        <DockPanel DockPanel.Dock="Top" >
                                            <Button Content="Keep First Tweets" Click="tweetView_KeepTweets">
                                                <Button.ToolTip>
                                                    Deletes all tweets after the first N, specified on the right.
                                                </Button.ToolTip>
                                            </Button>
                                            <DockPanel Margin="10,0">
                                                <Label Content="How many?" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBox x:Name="tweetView_keepHowManyTweets_textBox" VerticalAlignment="Center" Width="100"/>
                                            </DockPanel>
                                            <Button Content="Delete Before Date" Click="tweetView_DeleteSpamTweets">
                                                <Button.ToolTip>
                                                    Deletes tweets before date specified on the right.
                                                </Button.ToolTip>
                                            </Button>
                                            <DockPanel Margin="10,0">
                                                <Label Content="Before date" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <extendedWpf:DateTimePicker x:Name="tweetView_keepHowManyTweets_dateBox" VerticalAlignment="Center"/>
                                            </DockPanel>
                                        </DockPanel>

                                        <Expander ExpandDirection="Right">
                                            <ListView x:Name="tweetView" ItemsSource="{Binding Path=., Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                                <ListView.Resources>
                                                    <Style TargetType="GridViewColumnHeader">
                                                        <EventSetter Event="MouseUp" Handler="tweetView_Headers_MouseUp"/>
                                                    </Style>
                                                </ListView.Resources>
                                                <ListView.View>
                                                    <GridView x:Name="tweetViewGrid">
                                                        <GridViewColumn DisplayMemberBinding="{Binding Date}">
                                                            <GridViewColumnHeader Content="Date"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Tweet}">
                                                            <GridViewColumnHeader Content="Tweet"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding RetweetCount}">
                                                            <GridViewColumnHeader Content="Retweets"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Id}">
                                                            <GridViewColumnHeader Content="Id"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Lang}">
                                                            <GridViewColumnHeader Content="Lang"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding User}">
                                                            <GridViewColumnHeader Content="User"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding UserId}">
                                                            <GridViewColumnHeader Content="User Id"/>
                                                        </GridViewColumn>
                                                        <!-- this part could add another column in which to show a bunch of clickable links from the original tweet. -->
                                                        <!--<GridViewColumn Header="Links">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <DockPanel>
                                                                    <ItemsControl ItemsSource="{Binding Links}" DockPanel.Dock="Left">
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <Button Height="10" Content="{Binding Path=.}"></Button>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                    </ItemsControl>
                                                                </DockPanel>
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>-->
                                                        <GridViewColumn>
                                                            <GridViewColumnHeader Content="Controls"/>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <DockPanel>
                                                                        <Button Content="Delete" Click="tweetView_Item_DeleteButton"/>
                                                                        <Button Content="Follow link" Click="tweetView_Item_FollowLink"/>
                                                                    </DockPanel>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </Expander>
                                    </DockPanel>
                                </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>

                            <!-- END TWEET PANEL -->

                        </ad:LayoutPanel>

                        <ad:LayoutPanel Orientation="Vertical" DockWidth="*">
                            <ad:LayoutPanel Orientation="Horizontal" DockWidth="*"  DockHeight="*" >

                                <!-- LOG SETTINGS PANEL -->

                                <ad:LayoutAnchorablePane DockHeight="*">
                                    <ad:LayoutAnchorable x:Name="logSettingsLayout"  Title="Log Settings" CanClose="False" CanHide="False" AutoHideWidth="300">
                                        <StackPanel Margin="10,0" x:Name="logSettingsStackPanel">
                                            <DockPanel>
                                                <Label Content="Connection" HorizontalContentAlignment="Right" VerticalAlignment="Center" />
                                                <ComboBox x:Name="databaseConnectionComboBox" SelectedIndex="0" VerticalAlignment="Center">
                                                    <ComboBoxItem Content="Localhost"/>
                                                </ComboBox>
                                            </DockPanel>

                                            <DockPanel>
                                                <Label Content="Data destination" HorizontalContentAlignment="Right" VerticalAlignment="Center" />
                                                <ComboBox x:Name="databaseDestinationComboBox" SelectedIndex="{Binding DatabaseDestinationComboBoxIndex}" VerticalAlignment="Center">
                                                    <ComboBoxItem Content="PHP POST"/>
                                                    <ComboBoxItem Content="Direct to MySQL"/>
                                                    <ComboBoxItem Content="Direct to SQL"/>
                                                </ComboBox>
                                            </DockPanel>

                                            <DockPanel>
                                                <Label Content="PHP POST path" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        Sends database messages to this address. If not found, logs errors and slows down program.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox Name="databasePhpPath" VerticalAlignment="Center" Text="http://localhost/tweetlistener/php/saveJson.php" TextChanged="databasePhpPath_TextChanged"  />
                                            </DockPanel>

                                            <DockPanel>
                                                <Label Content="Log path" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        Path to log file.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox Name="logPathTextBox" VerticalAlignment="Center" Text="log.txt" />
                                            </DockPanel>
                                            <Button Content="Force reset Log" Click="log_forceResetButton"></Button>
                                            <DockPanel>
                                                <Label Content="Text file DB path" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        Saves/loads tweets in a file, as a backup/alternative to the database.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox Name="database_textFileDbPathTextBox" VerticalAlignment="Center" Text="{Binding TextFileDatabasePath, Mode=TwoWay}" />
                                            </DockPanel>
                                            <DockPanel>
                                                <Label Content="DB table name" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        Sends table name to PHP script, saves tweets in this table in the DB.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox Name="database_tableNameTextBox" VerticalAlignment="Center" Text="{Binding DatabaseTableName, Mode=TwoWay}" />
                                            </DockPanel>
                                            <DockPanel>
                                                <Label Content="DB connection str" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        (only for data destination direct to SQL) Info about the connection to the database.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox Name="database_connectionString" VerticalAlignment="Center" Text="{Binding ConnectionString, Mode=TwoWay}" />
                                            </DockPanel>

                                            <DockPanel>
                                                <CheckBox x:Name="checkBox_database" Content="Save to database" VerticalAlignment="Center" IsChecked="{Binding Path=SaveToDatabase, Mode=TwoWay}">
                                                    <CheckBox.ToolTip>
                                                        Saves each tweet to database, by sending POST request. Can slow down gathering. If sending fails, retries N times in one-second intervals.
                                                    </CheckBox.ToolTip>
                                                </CheckBox>
                                                <Label Content="| Retries" VerticalAlignment="Center"/>
                                                <TextBox x:Name="databaseRetries" VerticalAlignment="Center" MinWidth="30" MaxWidth="100" HorizontalAlignment="Left" Text="{Binding Path=MaxTweetDatabaseSendRetries, Mode=TwoWay}"/>
                                            </DockPanel>
                                            <CheckBox x:Name="checkBox_saveToTextFile" Content="Save to text file" VerticalAlignment="Center" IsChecked="{Binding Path=SaveToTextFileProperty, Mode=TwoWay}">
                                                <CheckBox.ToolTip>
                                                    Saves each tweet to text file, as backup for database. Path specified above.
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="checkBox_saveToRam" Content="Save to RAM memory" VerticalAlignment="Center" IsChecked="{Binding Path=SaveToRamProperty, Mode=TwoWay}">
                                                <CheckBox.ToolTip>
                                                    Keeps received tweets in memory. Not useful when connected with a long-term stream connection on a low-resource machine. 
                                                Drawback: cannot check for duplicates in listener, only in database (but that's better).
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="checkBox_logCounters" IsChecked="{Binding Path=CountersOn, Mode=TwoWay}" Content="Output event counters"  VerticalAlignment="Top">
                                                <CheckBox.ToolTip>
                                                    Output a log entry for each event received from Twitter, such as: received tweet, rate limit message, stream start/end, etc..
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="checkBox_databaseMessages" IsChecked="{Binding Path=OutputDatabaseMessages, Mode=TwoWay}" Content="Output database messages" VerticalAlignment="Top">
                                                <CheckBox.ToolTip>
                                                    Logs database messages (when it works, just logs "OK") - not recommended, slows down gathering.
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <CheckBox x:Name="checkBox_streamJsonSpammer" IsChecked="{Binding Path=LogEveryJson, Mode=TwoWay}" Content="Log every JSON message from Twitter" VerticalAlignment="Top">
                                                <CheckBox.ToolTip>
                                                    Logs raw data received from Twitter. Not recommended during gathering, but very useful when examining raw data, or debugging.
                                                </CheckBox.ToolTip>
                                            </CheckBox>
                                            <DockPanel>
                                                <Label Content="Window Title" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                    <Label.ToolTip>
                                                        Displays a custom window title for easy managemenet of many apps running at once.
                                                    </Label.ToolTip>
                                                </Label>
                                                <TextBox VerticalAlignment="Center" Text="{Binding WindowTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </DockPanel>

                                        </StackPanel>
                                    </ad:LayoutAnchorable>
                                </ad:LayoutAnchorablePane>

                                <!-- END LOG SETTINGS PANEL -->

                                <ad:LayoutPanel Orientation="Vertical" DockWidth="*">

                                    <!-- STREAMING PANEL -->

                                    <ad:LayoutAnchorablePane DockHeight="*">
                                        <ad:LayoutAnchorable x:Name="streamingToolboxLayout" Title="Streaming Toolbox" CanClose="False" CanHide="False" AutoHideWidth="300">
                                            <StackPanel>
                                                <Button x:Name="startStreamButton" Content="Start Stream" Click="startStreamButton_Click"/>
                                                <Button x:Name="restartStreamButton" Content="Restart Stream" Click="restartStreamButton_Click"/>
                                                <Button x:Name="stopStreamButton" Content="Stop Stream" Click="stopStreamButton_Click"/>
                                                <DockPanel x:Name="autoRestLastDayDockPanel" >
                                                    <CheckBox IsChecked="{Binding Path=RestLastDay, Mode=TwoWay}" Content="Scheduled daily rest" VerticalAlignment="Center" >
                                                        <CheckBox.ToolTip>
                                                            Runs an exhaustive REST query every day at this time, looks for all hashtags between current day and previous 2 days.
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>
                                                    <extendedWpf:TimeSpanUpDown Value="{Binding Path=RestLastDaySchedule}" VerticalAlignment="Center" Margin="10 4" Maximum="23:59:59" Minimum="0:0:0" />
                                                </DockPanel>
                                                <DockPanel>
                                                    <CheckBox x:Name="autoQueryExpansionCheckbox" Content="Scheduled expansion" VerticalAlignment="Center" >
                                                        <CheckBox.ToolTip>
                                                            Not recommended, VERY experimental. Expands query every period of time, and restarts stream with new keywords selected. Can easily blow up program.
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>
                                                    <extendedWpf:TimeSpanUpDown x:Name="expansionScheduleTimespan" Value="1.00:00:00" VerticalAlignment="Center" Margin="10 4" Maximum="31.0:0:0" Minimum="0:0:1" />
                                                </DockPanel>
                                                <DockPanel>
                                                    <CheckBox x:Name="checkBox_emailSpammer" IsChecked="{Binding Path=EmailSpammer, Mode=TwoWay}" Content="E-mail Disco" VerticalAlignment="Center" >
                                                        <CheckBox.ToolTip>
                                                            Email when the stream is disconnected for more than the period specified. Also e-mails when it reconnects.
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>
                                                    <extendedWpf:TimeSpanUpDown x:Name="emailSpammerTimespan" Value="{Binding EmailSpammerTimeSpan, Mode=TwoWay}" VerticalAlignment="Center" Margin="10 4" Maximum="31.0:0:0" Minimum="0:0:1" />
                                                </DockPanel>
                                                <DockPanel>
                                                    <CheckBox x:Name="checkBox_emailSpammerPositive" IsChecked="{Binding Path=EmailSpammerPositive, Mode=TwoWay}" Content="E-mail Connected" VerticalAlignment="Center" >
                                                        <CheckBox.ToolTip>
                                                            Email once every X interval, to inform that the program still works and is connected. If no email is received, there is a problem!!!
                                                        </CheckBox.ToolTip>
                                                    </CheckBox>
                                                    <extendedWpf:TimeSpanUpDown x:Name="emailSpammerPositiveTimespan" Value="{Binding EmailSpammerPositiveTimeSpan, Mode=TwoWay}" VerticalAlignment="Center" Margin="10 4" Maximum="31.0:0:0" Minimum="0:0:1" />
                                                </DockPanel>


                                            </StackPanel>

                                        </ad:LayoutAnchorable>
                                    </ad:LayoutAnchorablePane>

                                    <!-- END STREAMING PANEL -->


                                    <!--  EXPANSION PANEL -->

                                    <ad:LayoutAnchorablePane DockHeight="*">
                                        <ad:LayoutAnchorable Title="Expansion"  CanClose="False" CanHide="False" AutoHideWidth="300">

                                            <!-- this is the content you are looking for -->
                                            <DockPanel x:Name="expansionPanel">
                                                <StackPanel>
                                                    <DockPanel Margin="10,0">
                                                        <Label Content="Naive expansion percentage" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                Percentage of top ranked (based on occurrences) total amount
                                                        of distinct hashtags to extract from current tweet list.
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <TextBox Name="expansionNaivePercentage" Text="{Binding Path=NaiveExpansionPercentage, Mode=TwoWay}"  VerticalAlignment="Center"/>
                                                    </DockPanel>
                                                    <DockPanel Margin="10,0">
                                                        <Label Content="Naive expansion cooccurring generations" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                At 0, naive expansion finds the top % of hashtags.
                                                
                                                    At >1, naive expansion gets the top % co-occurring hashtags 
                                                        with the "Used" ones, and then the top % for the co-occurring
                                                        with the entire returned set, down to the N-th generation.
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <TextBox Name="expansionGenerations" Text="{Binding Path=NaiveExpansionGenerations, Mode=TwoWay}"  VerticalAlignment="Center"/>
                                                    </DockPanel>
                                                    <Button Content="Expand keywords using Naive (count tweets, top percent)" Click="expansion_ExpandNaive"/>
                                                    <DockPanel Margin="10,0">
                                                        <Label Content="Efron smoothing constant" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                Determines how much smoothing to apply to language models.
                                                        Default: 2000 based on Efron's paper, 0 means no smoothing, 
                                                        usually less than 2000 required for smaller tweet populations.
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <TextBox Text="{Binding Path=EfronMu, Mode=TwoWay}"  VerticalAlignment="Center"/>
                                                    </DockPanel>
                                                    <DockPanel Margin="10,0">
                                                        <Label Content="Efron Rank top N tags" HorizontalContentAlignment="Right" VerticalAlignment="Center">
                                                            <Label.ToolTip>
                                                                How many top-ranked hashtags to keep after ranking using KL divergence?
                                                        Amount could be high for human readability, but should be low
                                                        when blindly expanding query. Efron's default: 25.
                                                            </Label.ToolTip>
                                                        </Label>
                                                        <TextBox Text="{Binding Path=RankNHashtags, Mode=TwoWay}"  VerticalAlignment="Center"/>
                                                    </DockPanel>
                                                    <DockPanel>
                                                        <CheckBox IsChecked="{Binding ExpandOnlyOnCooccurring, Mode=TwoWay}" Content="Expand Only On Cooccurring" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5">
                                                            <CheckBox.ToolTip>
                                                                Calculates language models a bit faster, but cannot reuse them for multiple calculations.
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>
                                                        <CheckBox IsChecked="{Binding ApplyFeedback, Mode=TwoWay}" Content="Apply Feedback" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 5">
                                                            <CheckBox.ToolTip>
                                                                Apply feedback to query model calculation? Not tested much, use at own risk.
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>
                                                        <CheckBox IsChecked="{Binding LogModels, Mode=TwoWay}" Content="Log models" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5">
                                                            <CheckBox.ToolTip>
                                                                Log query model, language models, and feedback? 
                                                    Can be much slower when language models are already calculated.
                                                            </CheckBox.ToolTip>
                                                        </CheckBox>
                                                    </DockPanel>
                                                    <Button Content="Expand keywords using Efron (language model + smoothing)" Click="expansion_ExpandEfron"/>
                                                    <Label Content="{Binding Path=ExpansionProgressLabel}" HorizontalAlignment="Center" />
                                                </StackPanel>
                                            </DockPanel>
                                            <!-- this was the content you were looking for -->

                                        </ad:LayoutAnchorable>
                                    </ad:LayoutAnchorablePane>

                                    <!-- END  EXPANSION PANEL -->

                                </ad:LayoutPanel>

                                <!-- REST CONTROLS PANEL -->

                                <ad:LayoutAnchorablePane DockHeight="3*">
                                    <ad:LayoutAnchorable Title="Rest Controls" CanClose="False" CanHide="False" AutoHideWidth="300">

                                        <!-- this is the content you are looking for -->
                                        <DockPanel >
                                            <DockPanel Margin="10,0" DockPanel.Dock="Top">
                                                <Label Content="Filter" HorizontalContentAlignment="Right" VerticalAlignment="Center" Width="{Binding ElementName=restStartDateLabel, Path=ActualWidth}"/>
                                                <TextBox x:Name="restFilterTextBox" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <DockPanel Margin="10,0" DockPanel.Dock="Top">
                                                <Label x:Name="restStartDateLabel" Content="Start Date" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <extendedWpf:DateTimePicker x:Name="restStartDate"/>
                                            </DockPanel>
                                            <DockPanel Margin="10,0" DockPanel.Dock="Top">
                                                <Label Content="End Date" HorizontalContentAlignment="Right" VerticalAlignment="Center" Width="{Binding ElementName=restStartDateLabel, Path=ActualWidth}"/>
                                                <extendedWpf:DateTimePicker x:Name="restEndDate"/>
                                            </DockPanel>
                                            <StackPanel Background="#FFE5E5E5" DockPanel.Dock="Top" Margin="0, 4">
                                                <Button x:Name="restQueryButton" Content="Perform Query" Click="restQueryButton_Click" Margin="10, 0" ToolTip="Perform simple query, using filter specified above, and using settings from the buttons below (recent or not)"/>
                                                <Button x:Name="restExhaustiveQueryButton" Content="Perform Exhaustive Query" Click="restExhaustiveQueryButton_Click" Margin="10, 0" ToolTip="Perform exhaustive query using filter specified above and settings from below (recent or not)"/>
                                                <Button x:Name="restKeywordsQueryButton" Content="Perform Query From KeywordList" Click="restKeywordsQueryButton_Click" Margin="10, 0" ToolTip="Perform exhaustive query using selected keywords from the KeywordList panel, identical to the one being performed at the start of a Streaming connection"/>

                                                <Button x:Name="restRateLimitButton" Content="Get Rate Limits" Click="restRateLimitButton_Click" Margin="10, 0" ToolTip="Queries Twitter for the rate limits for the current application"/>

                                            </StackPanel>
                                            <StackPanel Background="#FFE5E5E5" DockPanel.Dock="Top">
                                                <!-- date filter, tweet id filter, etc... -->

                                                <DockPanel Margin="10, 0">
                                                    <Label Content="Max Keywords per query"/>
                                                    <extendedWpf:IntegerUpDown x:Name="maxKeywordsPerQueryBox" ClipValueToMinMax="True" Minimum="1" Maximum="10" Value="{Binding MaxKeywordsPerQuery, Mode=TwoWay}"/>
                                                </DockPanel>
                                                <CheckBox x:Name="rest_filter_recent" Content="Recent" IsChecked="True"
                                                          ToolTip="If true, returns recent tweets (in order). If false, returns popular tweets, not necessarily recent - could be 4 years old or something"
                                                          Margin="10, 4"
                                                          />

                                            </StackPanel>
                                            <DataGrid x:Name="restView" ItemsSource="{Binding Path=., Mode=OneWay}" AutoGenerateColumns="False" DockPanel.Dock="Top">
                                                <DataGrid.Columns>
                                                    <DataGridTemplateColumn Header="Time">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Time}" TextWrapping="Wrap" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTemplateColumn Header="Message" Width="*">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <ScrollViewer MaxHeight="300" >
                                                                    <TextBlock Text="{Binding Message}" TextWrapping="Wrap" />
                                                                </ScrollViewer>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </DockPanel>
                                        <!-- this was the content you were looking for -->


                                    </ad:LayoutAnchorable>
                                </ad:LayoutAnchorablePane>

                                <!-- END REST CONTROLS PANEL -->

                            </ad:LayoutPanel>


                            <ad:LayoutPanel Orientation="Horizontal" DockHeight="*">

                                <!-- KEYWORDS PANEL -->

                                <ad:LayoutAnchorablePane DockHeight="*" DockWidth="2*">
                                    <ad:LayoutAnchorable Title="Keywords, Hashtags">
                                        <DockPanel x:Name="keywordView">
                                            <DockPanel DockPanel.Dock="Top">
                                                <CheckBox Content="Continuous update" IsChecked="{Binding Path=ContinuousUpdate, Mode=TwoWay}" Margin="10 0" VerticalAlignment="Center"/>
                                                <Button x:Name="keywordsUpdate" Margin="0 0 10 0" Content="Update" Click="keywordsView_Update"/>
                                                <Button x:Name="keywordsUseAllButton" Margin="0 0 10 0" Content="Use all" Click="keywordsView_UseAll"/>
                                                <Button x:Name="keywordsUseNoneButton" Margin="0 0 10 0" Content="Use none" Click="keywordsView_UseNone"/>
                                                <Button x:Name="keywordsResetSelectionButton" Margin="0 0 10 0" Content="Reset Selection" Click="keywordsView_ResetSelection"/>
                                                <Button Content="Delete All" Padding="10 0" Click="keywordsView_DeleteAll"/>
                                                <Button Content="Clear LangModels" Padding="10 0" Click="keywordsView_ClearLangModels"/>
                                            </DockPanel>
                                            <DockPanel DockPanel.Dock="Top">
                                                <Button IsDefault="True" Content="Add" Padding="10 0" Margin="10 0" DockPanel.Dock="Right" Height="{Binding ElementName=keywordsResetSelectionButton, Path=ActualHeight}" Click="keywordAddButtonClick">
                                                    <Button.ToolTip>
                                                        Adds keyword to list. Beware, if the keyword is not a hashtag (does not begin with the character '#'), it will be gathered but its count will not work properly.
                                                    </Button.ToolTip>
                                                </Button>
                                                <DockPanel>
                                                    <Label Content="Add Keyword" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                    <TextBox Name="keywordAddTextbox" VerticalAlignment="Center"/>
                                                </DockPanel>
                                            </DockPanel>
                                            <ListView x:Name="keywordListView" ItemsSource="{Binding KeywordList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                                <ListView.Resources>
                                                    <Style TargetType="GridViewColumnHeader">
                                                        <EventSetter Event="MouseUp" Handler="keywordListView_Headers_MouseUp"/>
                                                    </Style>
                                                    <Style TargetType="ListViewItem">
                                                        <EventSetter Event="MouseUp" Handler="keywordListView_Item_MouseUp">
                                                        </EventSetter>
                                                    </Style>
                                                </ListView.Resources>
                                                <ListView.View>
                                                    <GridView x:Name="restExpansionListViewGrid">
                                                        <GridViewColumn DisplayMemberBinding="{Binding Keyword}">
                                                            <GridViewColumnHeader Content="Keyword"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Count}">
                                                            <GridViewColumnHeader Content="Count"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Expansion}">
                                                            <GridViewColumnHeader Content="Expansion"/>
                                                        </GridViewColumn>
                                                        <GridViewColumn>
                                                            <GridViewColumnHeader Content="Use"/>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <CheckBox IsChecked="{Binding UseKeyword}"/>

                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn>
                                                            <GridViewColumnHeader Content="Controls"/>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <DockPanel>
                                                                        <Button Content="Delete" Click="keywordView_Item_DeleteButton"/>
                                                                        <Button Content="Stem" Click="keywordView_Item_StemButton"/>
                                                                    </DockPanel>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                        <GridViewColumn>
                                                            <GridViewColumnHeader Content="Language Model"/>
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <DockPanel>
                                                                        <CheckBox IsChecked="{Binding HasLanguageModel, Mode=OneWay}"/>
                                                                        <Button Content="Calculate" Click="keywordView_Item_LangModelCalculateButton"/>
                                                                        <Button Content="Print" Click="keywordView_Item_LangModelPrintButton"/>
                                                                        <Button Content="Clear" Click="keywordView_Item_LangModelClearButton"/>
                                                                    </DockPanel>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </DockPanel>
                                    </ad:LayoutAnchorable>
                                </ad:LayoutAnchorablePane>

                                <!-- END KEYWORDS PANEL -->

                                <!-- CREDENTIALS PANEL -->

                                <ad:LayoutAnchorablePane DockHeight="*">
                                    <ad:LayoutAnchorable x:Name="credentialsPanelLayout"  Title="Credentials" CanClose="False" CanHide="False" AutoHideWidth="300">


                                        <!-- this is the content you are looking for -->
                                        <StackPanel x:Name="credentialsPanel">
                                            <DockPanel Margin="10,0">
                                                <Label Width="{Binding ActualWidth, ElementName=longestString}" Content="Access Token" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBox x:Name="Access_Token" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <DockPanel Margin="10,0">
                                                <Label x:Name="longestString" Content="Access Token Secret" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBox x:Name="Access_Token_Secret" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <DockPanel Margin="10,0">
                                                <Label Width="{Binding ActualWidth, ElementName=longestString}"  Content="Consumer Key" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBox x:Name="Consumer_Key" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <DockPanel Margin="10,0">
                                                <Label Width="{Binding ActualWidth, ElementName=longestString}"  Content="Consumer Secret" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
                                                <TextBox x:Name="Consumer_Secret" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <Button x:Name="setCredentialsButton" Content="Set" Margin="10, 0" Click="setCredentialsButton_Click">
                                                <Button.ToolTip>
                                                    Sets credentials for application. Used when running multiple instances of software.
                                                </Button.ToolTip>
                                            </Button>
                                            <Button x:Name="setCredentialsDefault" Margin="10, 0" Click="setCredentialsDefault_Click">
                                                <Button.Content>
                                                    <DockPanel>
                                                        <Label Content="Selected Credentials:"/>
                                                        <Label Content="{Binding CurrentCredentialDefaults, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0"  Padding="0,5"/>
                                                        <Label Content="/" Margin="0" Padding="0,5"/>
                                                        <Label Content="{Binding CredentialsMaxNumber}" Margin="0"  Padding="0,5"/>
                                                    </DockPanel>
                                                </Button.Content>
                                                <Button.ToolTip>
                                                    Sets default credentials (when all else fails, but make sure only one instance of software is running).
                                                </Button.ToolTip>
                                            </Button>

                                        </StackPanel>
                                        <!-- this was the content you were looking for -->


                                    </ad:LayoutAnchorable>
                                </ad:LayoutAnchorablePane>

                                <!-- END CREDENTIALS PANEL -->

                            </ad:LayoutPanel>

                        </ad:LayoutPanel>
                        <!-- END PANELS -->

                    </ad:LayoutPanel>
                </ad:LayoutRoot>
            </ad:DockingManager>

        </DockPanel>

    </Grid>
</UserControl>
